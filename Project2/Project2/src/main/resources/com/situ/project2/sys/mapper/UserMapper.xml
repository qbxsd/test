<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 该文件即是对下列命名空间中的接口实现 -->
<mapper namespace="com.situ.project2.sys.mapper.UserMapper">

	<!-- Result Map 映射实体类-->
	<resultMap id="BaseResultMap" type="com.situ.project2.sys.model.UserModel">
		<result column="id" property="id" />
		<result column="user_code" property="userCode" />
		<result column="user_name" property="userName" />
		<result column="user_pass" property="userPass" />
		<result column="role_code" property="roleCode" />
		<result column="parent_code" property="parentCode" />
		
		<result column="roleName" property="roleName" />
		<result column="parentName" property="parentName" />
			
	</resultMap>

	<!-- table all fields   sql片段 -->
	<sql id="Base_Column_List">
		id,user_code,user_name,user_pass,role_code,parent_code
		,(select d.user_name from project_02.user_manage as d where d.user_code=project_02.user_manage.parent_code) as parentName
		,(select d.role_name from project_02.role as d where d.role_code=project_02.user_manage.role_code) as roleName
	</sql>
	
	<!--数据库.表名字 -->
	<sql id="table_name">
		project_02.user_manage
	</sql>
	
	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where 1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="userCode != null and userCode != ''">
				and user_code like #{userCode}
			</if>
			<if test="userName != null and userName != ''">
				and user_name like #{userName}
			</if>
			<if test="userPass != null and userPass != ''">
				and user_pass like #{userPass}
			</if>
			<if test="roleCode != null and roleCode != ''">
				and role_code like #{roleCode}
			</if>
			<if test="parentCode != null and parentCode != ''">
				and parent_code like #{parentCode}
			</if>
	</sql>

	<!-- 插入记录 -->
	<!--selectKey  会将 SELECT LAST_INSERT_ID()的结果放入到传入的model的主键里面，  
        keyProperty 对应的model中的主键的属性名，这里是 user 中的id，因为它跟数据库的主键对应  
        order AFTER 表示 SELECT LAST_INSERT_ID() 在insert执行之后执行,多用与自增主键，  
              BEFORE 表示 SELECT LAST_INSERT_ID() 在insert执行之前执行，这样的话就拿不到主键了，  
                    这种适合那种主键不是自增的类型  
        resultType 主键类型 -->  
<!-- 		<selectKey resultType="java.lang.Integer"  -->
<!-- 		order="AFTER" keyProperty="id"> -->
<!-- 			SELECT LAST_INSERT_ID() -->
<!-- 		</selectKey> -->
	<!--添加记录-->
	<insert id="insert" parameterType="Object">
		insert into <include refid="table_name" />
		(user_code,user_name,user_pass,role_code,parent_code)
		values(#{userCode}, #{userName}, #{userPass}, #{roleCode},#{parentCode})
	</insert>
	
	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete from <include refid="table_name" /> 
		where id = #{id}
	</delete>
	<!--删除记录 -->
	<delete id="deleteModel" parameterType="Object">
		delete from <include refid="table_name" />
		<include refid="Example_Where_Clause" />
	</delete>

	<!-- 根据，修改记录 -->
<!-- 	<update id="update" parameterType="Object"> -->
<!-- 		update project_01.user set -->
<!-- 		username = #{username}, password = #{password} -->
<!-- 		where usercode = #{usercode} -->
<!-- 	</update> -->

	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateActive" parameterType="Object">
		update <include refid="table_name" /> set 
		<trim suffixOverrides=",">
			<if test="userName != null and userName != '' ">
				user_name = #{userName},
			</if>
			<if test="userPass != null and userPass != ''">
			 	user_pass = #{userPass}
			</if>
		</trim>
		where user_code = #{userCode}
	</update>

	<!-- 根据查询 系统用户 -->
	<select id="selectId" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from <include refid="table_name" /> where userCode = #{id}
	</select>

	<!-- 系统用户 列表总数 -->
	<select id="selectCount" resultType="java.lang.Integer" 
	parameterType="Object">
		select count(1) from <include refid="table_name" />
		<include refid="Example_Where_Clause" />
	</select>

	<!-- 查询系统用户列表 -->
	<select id="selectList" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from <include refid="table_name" />
		<include refid="Example_Where_Clause" />
		limit ${rowStart},${pageLimit}
	</select>
	
	<!-- 查询系统用户列表 -->
	<select id="selectAll" resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />
		from <include refid="table_name" />
		<include refid="Example_Where_Clause" />
	</select>

</mapper>   
